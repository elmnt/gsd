/**
 * CSS Grid Settings
 */

 /*
$breakpoint-not-small: 'screen and (min-width: 768px)';
$breakpoint-medium: 'screen and (min-width: 768px) and (max-width: 1280px)';
$breakpoint-large: 'screen and (min-width: 1280px)';

$bp0: 1440px;
$bp1: 1280px;
$bp2: 1024px;
$bp3: 768px;
*/

.wrapper {
	padding: 0 1em;
	@media only screen and (min-width: $bp3) {
		padding: 0 4em;
	}
}

.container {
	margin-left: auto;
	margin-right: auto;
	width: 100%;
	max-width: $bp1;
}

// .grid {}

.grid--content {

	width: 100%;

	@media only screen and (min-width: $bp3) {
		display: grid;  
		// grid-template-columns: 1fr 1fr 768px 1fr 1fr;
		grid-template-columns: 1fr 1fr minmax(200px, 768px) 1fr 1fr;
		grid-gap: 1em;
		> * {  
			grid-column: 3;  
		}
		> figure.big {  
			grid-column: 1 / -1;  
			margin: 3em 0 2em 0;  
		}
		> figure {  
			grid-column: 2 / -2;  
			margin: 3em 0 2em 0;  
		}
	}

}

.grid--showcase {
	width: 100%;
	a {
		margin-bottom: 1em;
		border: 4px solid rgba(99,99,99, 0.125);
	}
	@media only screen and (min-width: $bp3) {
		a {
			margin-bottom: 0;
		}
		display: grid;
		grid-gap: 1em;
		grid-template-columns: 1fr 1fr;
	}
}

/**
 * CSS Grid settings: removed for a simpler option
 */
/*
.grid {
	display: grid;
	grid-template-columns: repeat( 12, 1fr );
	grid-template-rows: auto;
	grid-template-areas: 
		". . . . a a a a . . . ."
		". . . b b b b b b . . ."
		". . c c c c c c c c . ."
		". d d d d d d d d d d ."
		"e e e e e e e e e e e e";
	grid-column-gap: 1em;
	.grid__content {
		grid-area: e;
		@media only screen and (min-width: $bp3) {
			grid-area: b;
		}
		// make the images wider on larger screens
		figure {
			@media only screen and (min-width: $bp3) {
				margin-left: -7em;
				margin-right: -7em;
			}
		}
	}
}
*/
