/**
 * CSS Grid Settings
 */

/* 
Tachyons breakpoint settings, for reference 
$breakpoint-not-small: 'screen and (min-width: 768px)';
$breakpoint-medium: 'screen and (min-width: 768px) and (max-width: 1280px)';
$breakpoint-large: 'screen and (min-width: 1280px)';
*/

/**
 * New breakpoint variables
 */
$bp0: 1440px;
$bp1: 1280px;
$bp2: 1024px;
$bp3: 800px;

.wrapper {
	padding: 0 1em;

	@media only screen and (min-width: $bp3) {
		padding: 0 4em;
	}
}

.container {
	margin-left: auto;
	margin-right: auto;
	width: 100%;
	max-width: $bp0;
}

// .grid {}

.grid--content {

	// mobile first: everything is full width
	width: 100%;

	@media only screen and (min-width: $bp3) {

		// At breakpoint $bp3 (800px) turn on display:grid;
		display: grid;

		// fr = fractional unit (one part of the available space)
		// For instance: 1fr 1fr 1fr 1fr (four columns, each column is 1/4 of the available space)
		// Set up grid columns 1fr 1fr [ content ] 1fr 1fr
		// The [ content ] will be no less than 200px and no more than 800px
		//
		// Column numbers, L to R
		// 1     2     3     4     5     6
		// |-----|-----|-----|-----|-----|
		//
		// Column numbers, R to L
		// -6   -5    -4    -3    -2    -1
		// |-----|-----|-----|-----|-----|
		//
		grid-template-columns: 1fr 1fr minmax(200px, $bp3) 1fr 1fr;

		// Gap between columns
		grid-gap: 0;

		// At this breakpoint, all content fills column 3
		// THIS IS CAUSING A BUG WHERE EVEN INLINE BLOCK ELEMENTS
		// ARE STRETCHING THE FULL COLUMN WIDTH (for instance: <button>)
		// > * {

		// This works better. Just have to make sure every parent element
		// that might show up in the content is accounted for
		>div,
		p,
		ul {
			grid-column: 3;
		}

		// figures with the class .big will start at 1
		// anb span to -1 (should be the same as using 6??)
		>figure.big {
			grid-column: 1 / -1;
			margin: 1em 1em;
		}

		// figures will start at 2 and span to -2
		// (should be the same is using 5??)
		>figure {
			grid-column: 2 / -2;
			margin: 1em 1em;
		}

		// Expand the header (or other content) a bit more
		>.expand {
			grid-column: 1 / -1;
			margin: 1em 1em;
		}
	}

}

.grid--showcase {
	width: 100%;

	a {
		margin-bottom: 1em;
		border: 4px solid rgba(99, 99, 99, 0.125);
	}

	@media only screen and (min-width: $bp3) {
		display: grid;
		grid-gap: 1em;
		grid-template-columns: 1fr 1fr;

		a {
			margin-bottom: 0;
		}
	}
}